#BlueJ class context
comment0.params=nomefich
comment0.target=RedesIndexadasPorAno(java.lang.String)
comment1.params=nomefich\ minYEAR\ maxYEAR\ tot\ nomesdist\ nomeslidos\ rede
comment1.target=RedesIndexadasPorAno(java.lang.String,\ int,\ int,\ int,\ int,\ int,\ java.util.TreeMap)
comment10.params=n
comment10.target=void\ setTotalNuncaASolo(int)
comment11.params=
comment11.target=java.util.TreeMap\ getRedes()
comment12.params=autor\ ano
comment12.target=Autor\ getAutorDoAno(java.lang.String,\ int)
comment13.params=o
comment13.target=boolean\ equals(java.lang.Object)
comment14.params=
comment14.target=RedesIndexadasPorAno\ clone()
comment15.params=
comment15.target=java.lang.String\ toSring()
comment15.text=\r\n\ @return\ String\ com\ relat\u00F3rio\r\n\ toString\ \u00E9\ o\ relat\u00F3rio\ a\ imprimir\ ap\u00F3s\ t\u00E9rmino\ da\ leitura\ do\ ficheiro\r\n
comment16.params=
comment16.target=java.lang.String\ tabelaDePublicacoesString()
comment16.text=\r\n\ \r\n\ @return\ String\ com\ tabela\r\n\ M\u00E9todo\ que\ devolve\ String\ com\ tabela\ de\ publica\u00E7\u00F5es\ descriminadas\ por\ ano.\ \r\n
comment17.params=autores\ ano
comment17.target=void\ addPublicacao(java.util.HashSet,\ int)
comment17.text=\r\n\ \r\n\ @param\ autores,\ Set\ de\ autores\ recolhidos\ de\ uma\ linha\ do\ ficheiro\r\n\ @param\ ano,\ o\ ano\ da\ publica\u00E7\u00E3o\r\n\ M\u00E9todo\ que\ alimenta\ a\ estrutura\ de\ dados\ com\ informa\u00E7\u00E3o\ de\ mais\ uma\ publica\u00E7\u00E3o\r\n
comment18.params=autor
comment18.target=int\ NumeroTotalDeArtigosDoAutor(java.lang.String)
comment18.text=\r\n\ \r\n\ @param\ autor,\ uma\ String\ com\ o\ nome\ do\ autor\r\n\ @return\ n\u00BA\ total\ de\ publica\u00E7\u00F5es\ desse\ autor\r\n\ M\u00E9todo\ que\ retorna\ o\ n\u00BA\ total\ de\ publica\u00E7\u00F5es\ para\ um\ dado\ autor\r\n
comment19.params=
comment19.target=int\ totalASolo()
comment19.text=\r\n\ @return\ inteiro\ com\ o\ total\ de\ autores\ que\ sempre\ e\ apenas\ publicaram\ a\ solo\r\n\ M\u00E9todo\ que\ calcula\ n\u00BA\ total\ de\ autores\ que\ apenas\ publicaram\ a\ solo\r\n
comment2.params=ripa
comment2.target=RedesIndexadasPorAno(RedesIndexadasPorAno)
comment20.params=
comment20.target=int\ totalNuncaASolo()
comment20.text=\r\n\ @return\ int,\ com\ o\ total\ de\ autores\ que\ nunca\ publicaram\ a\ solo\r\n\ M\u00E9todo\ que\ devolve\ total\ de\ autores\ que\ nunca\ publicaram\ a\ solo\r\n
comment21.params=X
comment21.target=int\ maisDeXArtigos(int)
comment21.text=\r\n\ @param\ X,\ limite\ m\u00EDnimo\ de\ artigos\ para\ contabilizar\ o\ autor\r\n\ @return\ int,\ n\u00BA\ de\ autores\ que\ publicaram\ mais\ de\ X\ artigos\r\n\ M\u00E9todo\ que\ que\ determina\ n\u00BA\ de\ autores\ que\ publicaram\ mais\ de\ X\ artigos.\r\n
comment22.params=X\ min\ max
comment22.target=java.util.TreeSet\ XAutoresQueMaisPubNoIntervalo(int,\ int,\ int)
comment22.text=\r\n\ @param\ X,\ tamanho\ da\ lista\ de\ autores\r\n\ @param\ min,\ ano\ m\u00EDnimo\r\n\ @param\ max,\ ano\ m\u00E1x\r\n\ @return\ TreeSet<String>,\ os\ X\ autores\ que\ mais\ publicaram\ no\ intervalo\ de\ anos\ dado\r\n
comment23.params=min\ max
comment23.target=java.util.TreeSet\ XParesComMaisArtigosPub(int,\ int)
comment23.text=\r\n\ @param\ min,\ o\ ano\ m\u00EDnimo\r\n\ @param\ max,\ o\ ano\ m\u00E1ximo\r\n\ @return\ TreeSet<ParAutPub>,\ um\ tree\ set\ ordenado\ por\ maior\ n\u00FAmero\ de\ publica\u00E7\u00F5es\ do\ par\ de\ autores\ associado\r\n
comment24.params=min\ max\ autores
comment24.target=java.util.TreeSet\ listaDeCoAutoresComuns(int,\ int,\ java.util.HashSet)
comment24.text=\r\n\ @param\ min,\ ano\ m\u00EDnimo\ do\ intevalo\r\n\ @param\ max,\ ano\ m\u00E1ximo\ do\ intervalo\r\n\ @param\ autores,\ set\ de\ no\ m\u00E1ximo\ tr\u00EAs\ autores\r\n\ @return\ um\ Set\ de\ autores\ que\ s\u00E3o\ coautores\ comuns\ aos\ autores\ da\ lista\ passada\ como\ par\u00E2metro\r\n\ M\u00E9todo\ que\ para\ uma\ lista\ de\ autores\ determina\ os\ coautores\ comuns\r\n
comment25.params=min\ max
comment25.target=java.util.TreeSet\ listarAutoresQuePublicaramNoIntervalo(int,\ int)
comment25.text=\r\n\ \r\n\ @param\ min,\ ano\ m\u00EDnimo\r\n\ @param\ max,\ ano\ m\u00E1ximo\r\n\ @return\ TreeSet\ com\ nomes\ de\ autores\ que\ publicaram\ em\ todos\ os\ anos\ do\ intervalo\ dado\r\n
comment26.params=autor
comment26.target=java.util.TreeSet\ todosOsCoAutoresDeUmAutor(java.lang.String)
comment26.text=\r\n\ \r\n\ @param\ autor,\ nome\ de\ um\ autor\r\n\ @return\ TreeSet\ dos\ coautores\ do\ autor\ passado\ como\ par\u00E2metro\r\n
comment27.params=first
comment27.target=java.util.TreeSet\ autoresComecadosPelaLetra(char)
comment27.text=\r\n\ \r\n\ @param\ first,\ letra\ pela\ qual\ queremos\ que\ os\ nomes\ da\ lista\ come\u00E7em\r\n\ @return\ lista\ de\ autores\ come\u00E7ados\ pela\ letra\ passada\ como\ par\u00E2metro\r\n
comment3.params=
comment3.target=java.lang.String\ getNomeFicheiro()
comment4.params=
comment4.target=int\ getMinYear()
comment5.params=
comment5.target=int\ getMaxYear()
comment6.params=
comment6.target=int\ getTotalPubls()
comment7.params=
comment7.target=int\ getTotalNomesDistintos()
comment8.params=
comment8.target=int\ getTotalNomesLidos()
comment9.params=t
comment9.target=void\ setTotalDeNomesDistintos(int)
numComments=28
